<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mno.mappers.community">
<sql id="searchCondition">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and title like concat('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				and content like concat('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'w'.toString()">
				and writer like concat('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'tc'.toString()">
				and (title like concat('%', #{keyword}, '%')
					or content like concat('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'all'.toString()">
				and (title like concat('%', #{keyword}, '%')
					or content like concat('%', #{keyword}, '%')
					or writer like concat('%', #{keyword}, '%'))
			</if>
		</if>
	</sql>
	<!-- 게시물 목록 -->
	<select id="list"
		resultType="com.spring.mno.community.domain.CommunityVO">
		select
		bno, title, content, writer, regDate, viewCnt
		from
		tbl_board
	</select>

	<!-- 게시물 작성 -->
	<insert id="write"
		parameterType="com.spring.mno.community.domain.CommunityVO">
		insert into
		tbl_board(title, content, writer, regDate,fileName)
		values(#{title}, #{content}, #{writer},now(),#{fileName})
	</insert>

	<!-- 게시물 조회 -->
	<select id="view" parameterType="int"
		resultType="com.spring.mno.community.domain.CommunityVO">
		select
		bno, title, content, writer, regDate, viewCnt, fileName
		from
		tbl_board
		where
		bno = #{bno}
	</select>

	<!-- 게시물 수정 -->
	<update id="modify"
		parameterType="com.spring.mno.community.domain.CommunityVO">
		update
		tbl_board
		set
		title = #{title},
		content = #{content},
		writer = #{writer}
		where bno = #{bno}
	</update>

	<!-- 게시물 삭제 -->
	<delete id="delete" parameterType="int">
		delete
		from tbl_board
		where bno = #{bno}
	</delete>
	
	<!-- 게시물 총 개수 -->
	<select id="gettotalcount" resultType="int">
		select count(bno)
		from tbl_board
		where bno > 0
		<include refid="searchCondition"></include>
	</select>
	

	<!-- 게시물 목록 + 페이징 -->
	<select id="listPage"
		resultType="com.spring.mno.community.domain.CommunityVO">
		select
		*
		from tbl_board
		where bno > 0
		<include refid="searchCondition"></include>
		order by bno desc, regDate desc
		limit #{pageStart}, #{perPageNum}
	</select>
	<!-- 조회수 증가 -->
	<update id="updateViewCnt">
		update tbl_board
		set viewCnt = viewCnt + 1
		where bno = #{bno}
	</update>
	<!-- d아이씨 -->
	
   	<select id = "getrecommends" resultType = "rec" parameterType = "int">
		select * from Recommend where Rec_category=#{rec_category} order by rand() limit 1,7
	   </select>
   		<select id = "getrecommends2" resultType = "rec" parameterType = "int">
			select * from Recommend where  rec_id=#{rec_id}
	   </select>
 	<insert id = "insertrecommend"  parameterType = "rec">
         INSERT INTO Recommend(Rec_food1,Rec_food2,Rec_food3,Rec_category,Rec_nutrient,Rec_cal,Rec_price) VALUES( #{rec_food1},#{rec_food2},#{rec_food3}, #{rec_category},#{rec_nutrient},#{rec_cal},#{rec_price} )
      </insert>
      
 	<insert id = "insertpay"  parameterType = "paylist">
         INSERT INTO paylist(paylist_memberid, paylist_orderlist, paylist_date, paylist_price) VALUES( #{paylist_memberid}, #{paylist_orderlist} ,#{paylist_date},#{paylist_price})
      </insert>
  	 <select id = "getpaylist" resultType = "paylist" parameterType = "Dates" >
         SELECT * FROM paylist WHERE paylist_date >= #{date1}*10000  AND #{date2}*10000+9999 >= paylist_date AND  paylist_memberid=#{user} ORDER BY paylist_date
      </select>
  	 <select id = "getpaylists" resultType = "paylist" parameterType = "Dates" >
         SELECT * FROM paylist WHERE paylist_date >= #{date1}*10000  AND #{date2}*10000+9999 >= paylist_date  ORDER BY paylist_date
      </select>
  
  
   
 	<insert id = "insertBmi"  parameterType = "bmi">
         INSERT INTO bmi(userid,weight,height,bmi,bmi_date) VALUES(#{userid}, #{weight}, #{height},#{bmi},#{bmi_date})
      </insert>
      

 	  <select id = "getbmis" resultType = "bmi" parameterType = "Dates" >
         SELECT * FROM bmi WHERE bmi_date >= #{date1}  AND #{date2} >= bmi_date AND userid=#{user} ORDER BY bmi_date
      </select>
      
		


 	<insert id = "insertDiet_info"  parameterType = "diet_info">
         INSERT INTO diet_info(userid,dates,foodtype,foodname,eat,cal) VALUES( #{user}, #{dates}, #{foodtype}, #{foodname},#{eat},#{cal}) 
      </insert>
     
 	  <select id = "getdiet_infolist" resultType = "diet_info" parameterType = "Dates" >
         SELECT * FROM diet_info WHERE dates >= #{date1}*10000  AND #{date2}*10000+9999 >= dates AND userid=#{user} ORDER BY dates
      </select>
      
 	  
      
	   
   
   	<!--  resultMap = "MemberResultMap"-->
   	
 	   <select id = "getmember" resultType = "member" parameterType = "String">
         SELECT * FROM member where id=#{id}
      </select>
 	   <select id = "getMembers" resultType = "member" >
         SELECT * FROM member
      </select>
      <insert id = "insertMember" parameterType = "member">
         INSERT INTO member VALUES(#{id},#{passwd1},#{name}, #{email}, #{phone},#{addr},#{ssn},#{usertype}, #{fileName})
      </insert>
       <update id = "updateMember" parameterType = "member" >
         UPDATE member SET name = #{name}, email = #{email}, phone = #{phone} ,addr = #{addr},passwd1 = #{passwd1}, fileName=#{fileName} WHERE id = #{id}
      </update>
      
      <!--
      <select id = "selectUpdateMember" resultType = "member" parameterType = "int">
         SELECT * FROM tab_mybatis WHERE id = #{id}
      </select>
      
      
     
      
      <delete id = "deleteMember" parameterType = "int">
         DELETE tab_mybatis WHERE id = #{id}
      </delete>  -->
       
      
	
</mapper>